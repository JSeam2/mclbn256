name: lint-test-build-upload
on:
  push
jobs:
  manylinux:
    runs-on: ubuntu-latest
    container: quay.io/pypa/manylinux2014_x86_64
    strategy:
      matrix:
        PYTHON: ["cp37-cp37m", "cp38-cp38", "cp39-cp39", "cp310-cp310"]
    name: "Python ${{ matrix.PYTHON }} for manylinux2014"
    steps:
      - uses: actions/checkout@v2
      - name: Install Python.
        run: |
          yum -y install wget libffi-devel patchelf
          /opt/python/${{ matrix.PYTHON }}/bin/python -m pip install virtualenv
          /opt/python/${{ matrix.PYTHON }}/bin/python -m virtualenv .venv
      - name: Install Python dependencies for build process.
        run: .venv/bin/pip install -U pip setuptools wheel build
      - name: Download mcl source tree archive and extract it.
        run: |
          wget https://github.com/herumi/mcl/archive/refs/tags/v1.61.tar.gz
          tar -xvzf *.tar.gz
      - name: Build wheel file.
        run: |
          # Compile platform-dependent binaries
          cd mcl*
          make
          ls lib
          cd ..

          # Remove prebuilt binaries
          rm mclbn256/libmclbn256.*
          rm mclbn256/lib/libmcl.*

          # Copy binaries into Python module
          cp mcl-*/lib/libmclbn256.so mclbn256
          cp mcl-*/lib/libmcl.so mclbn256/lib


          #
          # Allow relative linking of libmcl.so dependency (also likely unused, but changing a link is easier than deleting one)
          #
          echo "Files linked to from lib/libmcl.so"
          patchelf --print-needed mclbn256/lib/libmcl.so  # dependency has only standard system dependenciesendency (also likely unused, but changing a link is easier than deleting one)
          
          echo "Files linked to from libmclbn256.so"
          patchelf --print-needed mclbn256/libmclbn256.so  # the BN254 build depends on lib/libmcl.so which may not be in any environment folder

          echo "patching..."
          patchelf --replace-needed lib/libmcl.so \$ORIGIN/lib/libmcl.so mclbn256/libmclbn256.so

          echo "Files linked to from libmclbn256.so"
          patchelf --print-needed mclbn256/libmclbn256.so  # the lib/libmcl.so dependency should be relative now

          echo "patching..."
          patchelf --replace-needed libmcl.so \$ORIGIN/lib/libmcl.so mclbn256/libmclbn256.so

          echo "Files linked to from libmclbn256.so"
          patchelf --print-needed mclbn256/libmclbn256.so  # the lib/libmcl.so dependency should be relative now

          echo "adding dependency...";#echo "patching..."
          patchelf --add-needed \$ORIGIN/lib/libmcl.so mclbn256/libmclbn256.so
          # patchelf --add-needed \$ORIGIN/libmcl.so mclbn256/libmclbn256.so

          echo "Files linked to from libmclbn256.so"
          patchelf --print-needed mclbn256/libmclbn256.so  # the lib/libmcl.so dependency should be relative now


          # Build
          .venv/bin/python -m build

          mkdir tmpwheelhouse
          mv dist/mclbn*.whl tmpwheelhouse
          auditwheel repair tmpwheelhouse/mclbn*.whl -w wheelhouse/
          # mkdir wheelhouse
          # mv dist/mclbn*.whl wheelhouse
      - name: Test wheel installation.
        run: |
          ls wheelhouse
          unzip -Zl wheelhouse/*.whl
          # ls -R wheelhouse
          .venv/bin/pip install -f wheelhouse --no-index mclbn256
      - name: Lint and test module (and compiled libsodium shared library file).
        run: |
          .venv/bin/python -c "import mclbn256; mclbn256.mclbn256.assert_bilinearity(); mclbn256.mclbn256.assert_serializable(); print('pass')"
          #.venv/bin/pip install -U pylint coverage coveralls nose
          #.venv/bin/python -m pylint rbcl # Check against linting rules.
          #.venv/bin/python rbcl/rbcl.py -v # Run doctests.
          #.venv/bin/python -m nose --cover-erase # Test using nose.
          #.venv/bin/python -m coveralls --service=github # Submit to coveralls.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload wheel file.
        run: |
           mkdir mclbn-wheelhouse
           mv wheelhouse/mclbn*.whl mclbn-wheelhouse/
      - uses: actions/upload-artifact@v1
        with:
          name: "mclbn256-0.3.3-manylinux1-${{ matrix.PYTHON }}"
          path: mclbn-wheelhouse/
  linux:
    runs-on: ubuntu-latest
    container: quay.io/pypa/manylinux2014_x86_64
    strategy:
      matrix:
        PYTHON: ["cp37-cp37m", "cp38-cp38", "cp39-cp39", "cp310-cp310"]
    name: "Python ${{ matrix.PYTHON }} for manylinux2014"
    steps:
      - uses: actions/checkout@v2
      - name: Install Python.
        run: |
          yum -y install wget libffi-devel patchelf
          /opt/python/${{ matrix.PYTHON }}/bin/python -m pip install virtualenv
          /opt/python/${{ matrix.PYTHON }}/bin/python -m virtualenv .venv
      - name: Install Python dependencies for build process.
        run: .venv/bin/pip install -U pip setuptools wheel build
      - name: Download mcl source tree archive and extract it.
        run: |
          wget https://github.com/herumi/mcl/archive/refs/tags/v1.61.tar.gz
          tar -xvzf *.tar.gz
      - name: Build wheel file.
        run: |
          # Compile platform-dependent binaries
          cd mcl*
          make
          ls lib
          cd ..

          # Remove prebuilt binaries
          rm mclbn256/libmclbn256.*
          rm mclbn256/lib/libmcl.*

          # Copy binaries into Python module
          cp mcl-*/lib/libmclbn256.so mclbn256
          cp mcl-*/lib/libmcl.so mclbn256/lib


          #
          # Allow relative linking of libmcl.so dependency (also likely unused, but changing a link is easier than deleting one)
          #
          echo "Files linked to from lib/libmcl.so"
          patchelf --print-needed mclbn256/lib/libmcl.so  # dependency has only standard system dependenciesendency (also likely unused, but changing a link is easier than deleting one)
          
          echo "Files linked to from libmclbn256.so"
          patchelf --print-needed mclbn256/libmclbn256.so  # the BN254 build depends on lib/libmcl.so which may not be in any environment folder

          echo "patching..."
          patchelf --replace-needed lib/libmcl.so \$ORIGIN/lib/libmcl.so mclbn256/libmclbn256.so

          echo "Files linked to from libmclbn256.so"
          patchelf --print-needed mclbn256/libmclbn256.so  # the lib/libmcl.so dependency should be relative now

          echo "patching..."
          patchelf --replace-needed libmcl.so \$ORIGIN/lib/libmcl.so mclbn256/libmclbn256.so

          echo "Files linked to from libmclbn256.so"
          patchelf --print-needed mclbn256/libmclbn256.so  # the lib/libmcl.so dependency should be relative now

          echo "adding dependency...";#echo "patching..."
          patchelf --add-needed \$ORIGIN/lib/libmcl.so mclbn256/libmclbn256.so
          # patchelf --add-needed \$ORIGIN/libmcl.so mclbn256/libmclbn256.so

          echo "Files linked to from libmclbn256.so"
          patchelf --print-needed mclbn256/libmclbn256.so  # the lib/libmcl.so dependency should be relative now


          # Build
          .venv/bin/python -m build

          # mkdir tmpwheelhouse
          # mv dist/mclbn*.whl tmpwheelhouse
          # auditwheel repair tmpwheelhouse/mclbn*.whl -w wheelhouse/
          mkdir wheelhouse
          mv dist/mclbn*.whl wheelhouse
      - name: Test wheel installation.
        run: |
          ls wheelhouse
          unzip -Zl wheelhouse/*.whl
          # ls -R wheelhouse
          .venv/bin/pip install -f wheelhouse --no-index mclbn256
      - name: Lint and test module (and compiled libsodium shared library file).
        run: |
          .venv/bin/python -c "import mclbn256; mclbn256.mclbn256.assert_bilinearity(); mclbn256.mclbn256.assert_serializable(); print('pass')"
          #.venv/bin/pip install -U pylint coverage coveralls nose
          #.venv/bin/python -m pylint rbcl # Check against linting rules.
          #.venv/bin/python rbcl/rbcl.py -v # Run doctests.
          #.venv/bin/python -m nose --cover-erase # Test using nose.
          #.venv/bin/python -m coveralls --service=github # Submit to coveralls.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload wheel file.
        run: |
           mkdir mclbn-wheelhouse
           mv wheelhouse/mclbn*.whl mclbn-wheelhouse/
      - uses: actions/upload-artifact@v1
        with:
          name: "mclbn256-0.3.3-manylinux1-${{ matrix.PYTHON }}"
          path: mclbn-wheelhouse/
  macos-10:
    runs-on: macOS-10.15
    strategy:
      matrix:
        PYTHON:
          - VERSION: '3.8'
            ABI_VERSION: '3.6'
            DOWNLOAD_URL: 'https://www.python.org/ftp/python/3.8.2/python-3.8.2-macosx10.9.pkg'
            BIN_PATH: '/Library/Frameworks/Python.framework/Versions/3.8/bin/python3'
    name: "Python ${{ matrix.PYTHON.VERSION }} for ABI ${{ matrix.PYTHON.ABI_VERSION }} on macOS"
    steps:
      - uses: actions/checkout@v2
      - name: Install Python.
        run: |
          curl "$PYTHON_DOWNLOAD_URL" -o python.pkg
          sudo installer -pkg python.pkg -target /
          ${{ matrix.PYTHON.BIN_PATH }} -m pip install -U virtualenv
          ${{ matrix.PYTHON.BIN_PATH }} -m virtualenv venv
        env:
          PYTHON_DOWNLOAD_URL: ${{ matrix.PYTHON.DOWNLOAD_URL }}
      - name: Install Python dependencies for build process.
        run: venv/bin/pip install -U pip setuptools wheel build
      - name: Download libsodium source tree archive and extract it.
        run: |
          wget https://github.com/herumi/mcl/archive/refs/tags/v1.61.tar.gz
          tar -xvzf *.tar.gz
      - name: Build wheel file.
        run: |
          # Compile platform-dependent binaries
          cd mcl*
          make
          ls lib
          cd ..

          # Remove prebuilt binaries
          rm mclbn256/libmclbn256.*
          rm mclbn256/lib/libmcl.*

          # Copy binaries into Python module
          cp mcl-*/lib/libmclbn256.dylib mclbn256
          cp mcl-*/lib/libmcl.dylib mclbn256/lib

          # Allow relative linking of libmcl.dylib dependency (also likely unused, but changing a link is easier than deleting one)
          otool -L mclbn256/lib/libmcl.dylib  # dependency has only standard system dependencies
          otool -L mclbn256/libmclbn256.dylib  # the BN254 build depends on lib/libmcl.so which may not be in any environment folder
          install_name_tool -change lib/libmcl.dylib @loader_path/lib/libmcl.dylib mclbn256/libmclbn256.dylib

          # Build
          venv/bin/python -m build

          mkdir wheelhouse
          mv dist/mclbn*.whl wheelhouse
        env:
          PYTHON_VERSION: ${{ matrix.PYTHON.ABI_VERSION }}
      - name: Test wheel installation.
        run: |
          ls wheelhouse
          unzip -Zl wheelhouse/*.whl
          # ls -R wheelhouse
          venv/bin/pip install .
          # venv/bin/pip install -f wheelhouse --no-index mclbn256
      - name: Lint and test module (and compiled libsodium shared library file).
        run: |
          venv/bin/python -c "import mclbn256; mclbn256.mclbn256.assert_bilinearity(); mclbn256.mclbn256.assert_serializable(); print('pass')"
          # venv/bin/pip install -U pip pylint coverage nose
          # venv/bin/python -m pylint rbcl # Check against linting rules.
          # venv/bin/python rbcl/rbcl.py -v # Run doctests.
          # venv/bin/python -m nose --cover-erase # Test using nose.
      - name: Upload wheel file.
        run: |
          mkdir mclbn-wheelhouse
          mv wheelhouse/mclbn*.whl mclbn-wheelhouse/
      - uses: actions/upload-artifact@v1
        with:
          name: "mclbn-0.3.3-macOS-10-amd-${{ matrix.PYTHON.VERSION }}"
          path: mclbn-wheelhouse/
  macos:
    runs-on: macOS-latest
    strategy:
      matrix:
        PYTHON:
          - VERSION: '3.9'
            ABI_VERSION: '3.6'
            DOWNLOAD_URL: 'https://www.python.org/ftp/python/3.9.12/python-3.9.12-macos11.pkg'
            BIN_PATH: '/Library/Frameworks/Python.framework/Versions/3.9/bin/python3'
    name: "Python ${{ matrix.PYTHON.VERSION }} for ABI ${{ matrix.PYTHON.ABI_VERSION }} on macOS"
    steps:
      - uses: actions/checkout@v2
      - name: Install Python.
        run: |
          curl "$PYTHON_DOWNLOAD_URL" -o python.pkg
          sudo installer -pkg python.pkg -target /
          ${{ matrix.PYTHON.BIN_PATH }} -m pip install -U virtualenv
          ${{ matrix.PYTHON.BIN_PATH }} -m virtualenv venv
        env:
          PYTHON_DOWNLOAD_URL: ${{ matrix.PYTHON.DOWNLOAD_URL }}
      - name: Install Python dependencies for build process.
        run: venv/bin/pip install -U pip setuptools wheel build
      - name: Download libsodium source tree archive and extract it.
        run: |
          wget https://github.com/herumi/mcl/archive/refs/tags/v1.61.tar.gz
          tar -xvzf *.tar.gz
      - name: Build wheel file.
        run: |
          # Compile platform-dependent binaries
          cd mcl*
          make
          ls lib
          cd ..

          # Remove prebuilt binaries
          rm mclbn256/libmclbn256.*
          rm mclbn256/lib/libmcl.*

          # Copy binaries into Python module
          cp mcl-*/lib/libmclbn256.dylib mclbn256
          cp mcl-*/lib/libmcl.dylib mclbn256/lib

          # Allow relative linking of libmcl.dylib dependency (also likely unused, but changing a link is easier than deleting one)
          otool -L mclbn256/lib/libmcl.dylib  # dependency has only standard system dependencies
          otool -L mclbn256/libmclbn256.dylib  # the BN254 build depends on lib/libmcl.so which may not be in any environment folder
          install_name_tool -change lib/libmcl.dylib @loader_path/lib/libmcl.dylib mclbn256/libmclbn256.dylib

          # Build
          venv/bin/python -m build

          mkdir wheelhouse
          mv dist/mclbn*.whl wheelhouse
        env:
          PYTHON_VERSION: ${{ matrix.PYTHON.ABI_VERSION }}
      - name: Test wheel installation.
        run: |
          ls wheelhouse
          unzip -Zl wheelhouse/*.whl
          # ls -R wheelhouse
          venv/bin/pip install .
          # venv/bin/pip install -f wheelhouse --no-index mclbn256
      - name: Lint and test module (and compiled libsodium shared library file).
        run: |
          venv/bin/python -c "import mclbn256; mclbn256.mclbn256.assert_bilinearity(); mclbn256.mclbn256.assert_serializable(); print('pass')"
          # venv/bin/pip install -U pip pylint coverage nose
          # venv/bin/python -m pylint rbcl # Check against linting rules.
          # venv/bin/python rbcl/rbcl.py -v # Run doctests.
          # venv/bin/python -m nose --cover-erase # Test using nose.
      - name: Upload wheel file.
        run: |
          mkdir mclbn-wheelhouse
          mv wheelhouse/mclbn*.whl mclbn-wheelhouse/
      - uses: actions/upload-artifact@v1
        with:
          name: "mclbn-0.3.3-macOS-11-amd-${{ matrix.PYTHON.VERSION }}"
          path: mclbn-wheelhouse/
  macos-arm:
    runs-on: macOS-11
    strategy:
      matrix:
        PYTHON:
          - VERSION: '3.10'
            ABI_VERSION: '3.6'
            DOWNLOAD_URL: 'https://www.python.org/ftp/python/3.10.1/python-3.10.1-macos11.pkg'
            BIN_PATH: '/Library/Frameworks/Python.framework/Versions/3.10/bin/python3'
    name: "Python ${{ matrix.PYTHON.VERSION }} for ABI ${{ matrix.PYTHON.ABI_VERSION }} on macOS"
    steps:
      - uses: actions/checkout@v2
      - name: Install Python.
        run: |
          curl "$PYTHON_DOWNLOAD_URL" -o python.pkg
          sudo installer -pkg python.pkg -target /
          ${{ matrix.PYTHON.BIN_PATH }} -m pip install -U virtualenv
          ${{ matrix.PYTHON.BIN_PATH }} -m virtualenv venv
        env:
          PYTHON_DOWNLOAD_URL: ${{ matrix.PYTHON.DOWNLOAD_URL }}
      - name: Install Python dependencies for build process.
        run: venv/bin/pip install -U pip setuptools wheel build
      - name: Download mcl source tree archive and extract it.
        run: |
          wget https://github.com/herumi/mcl/archive/refs/tags/v1.61.tar.gz
          tar -xvzf *.tar.gz
      - name: Build wheel file.
        run: |
          # Compile platform-dependent binaries
          cd mcl*
          make
          ls lib
          cd ..

          # Remove prebuilt binaries
          rm mclbn256/libmclbn256.*
          rm mclbn256/lib/libmcl.*

          # Copy binaries into Python module
          cp mcl-*/lib/libmclbn256.dylib mclbn256
          cp mcl-*/lib/libmcl.dylib mclbn256/lib

          # Allow relative linking of libmcl.dylib dependency (also likely unused, but changing a link is easier than deleting one)
          otool -L mclbn256/lib/libmcl.dylib  # dependency has only standard system dependencies
          otool -L mclbn256/libmclbn256.dylib  # the BN254 build depends on lib/libmcl.so which may not be in any environment folder
          install_name_tool -change lib/libmcl.dylib @loader_path/lib/libmcl.dylib mclbn256/libmclbn256.dylib

          # Build
          venv/bin/python -m build

          mkdir wheelhouse
          mv dist/mclbn*.whl wheelhouse
        env:
          PYTHON_VERSION: ${{ matrix.PYTHON.ABI_VERSION }}
      - name: Test wheel installation.
        run: |
          ls wheelhouse
          unzip -Zl wheelhouse/*.whl
          # ls -R wheelhouse
          venv/bin/pip install -f wheelhouse --no-index mclbn256
      - name: Lint and test module (and compiled libsodium shared library file).
        run: |
          venv/bin/python -c "import mclbn256; mclbn256.mclbn256.assert_bilinearity(); mclbn256.mclbn256.assert_serializable(); print('pass')"
          # venv/bin/pip install -U pip pylint coverage nose
          # venv/bin/python -m pylint rbcl # Check against linting rules.
          # venv/bin/python rbcl/rbcl.py -v # Run doctests.
          #venv/bin/python -m nose --cover-erase # Test using nose.  # RbCl 0.2.0 has succeeded before but but errored at end [due to nose in 3.10 bug](https://github.com/nose-devs/nose/issues/1099)
      - name: Upload wheel file.
        run: |
          mkdir mclbn-wheelhouse
          mv wheelhouse/mclbn*.whl mclbn-wheelhouse/
      - uses: actions/upload-artifact@v1
        with:
          name: "mclbn-0.3.3-macOS-arm-${{ matrix.PYTHON.VERSION }}"
          path: mclbn-wheelhouse/





